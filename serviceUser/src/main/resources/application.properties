# ===================================================================
# Spring Boot Configuration for UserService (application.properties)
# ===================================================================

# Server Configuration
server.port=8081
server.servlet.context-path=/
server.compression.enabled=true
server.error.include-stacktrace=never
server.error.include-message=always

# Application Configuration
spring.application.name=userservice
spring.profiles.active=dev

# MongoDB Configuration
spring.data.mongodb.host=${MONGODB_HOST:localhost}
spring.data.mongodb.port=${MONGODB_PORT:27017}
spring.data.mongodb.database=${MONGODB_DATABASE:userservice}
spring.data.mongodb.username=${MONGODB_USERNAME:}
spring.data.mongodb.password=${MONGODB_PASSWORD:}
spring.data.mongodb.authentication-database=${MONGODB_AUTH_DB:admin}
spring.data.mongodb.uri=${MONGODB_URI:mongodb://localhost:27017/userservice}

# RabbitMQ Configuration
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}
spring.rabbitmq.virtual-host=${RABBITMQ_VHOST:/}
spring.rabbitmq.connection-timeout=60000
spring.rabbitmq.template.mandatory=true
spring.rabbitmq.template.receive-timeout=5000
spring.rabbitmq.template.reply-timeout=5000
spring.rabbitmq.listener.simple.concurrency=3
spring.rabbitmq.listener.simple.max-concurrency=10
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.initial-interval=1000
spring.rabbitmq.listener.simple.retry.max-attempts=3
spring.rabbitmq.listener.simple.retry.max-interval=10000

# Security Configuration
spring.security.user.name=${SECURITY_USER:admin}
spring.security.user.password=${SECURITY_PASSWORD:admin123}
spring.security.user.roles=ADMIN

# Jackson JSON Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.indent-output=true
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.default-property-inclusion=NON_NULL

# Validation Configuration
spring.validation.enabled=true

# ===================================================================
# JWT CONFIGURATION
# ===================================================================
app.jwt.secret=${JWT_SECRET:mySecretKey123456789012345678901234567890123456789012345678901234567890}
app.jwt.expiration=${JWT_EXPIRATION:86400000}
app.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# CORS Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8081,http://localhost:4200}
app.cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS,PATCH}
app.cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
app.cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}

# RabbitMQ Custom Configuration
app.rabbitmq.timeout=${RABBITMQ_TIMEOUT:5000}
app.rabbitmq.retry-attempts=${RABBITMQ_RETRY_ATTEMPTS:3}

# ===================================================================
# LOGGING CONFIGURATION
# ===================================================================
logging.level.com.m1_fonda.serviceUser=${LOG_LEVEL:INFO}
logging.level.org.springframework.security=WARN
logging.level.org.springframework.data.mongodb=WARN
logging.level.org.springframework.amqp=WARN
logging.level.org.springframework.web=INFO
logging.level.org.mongodb.driver=WARN
logging.level.io.jsonwebtoken=WARN

logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=${LOG_FILE:logs/userservice.log}
logging.file.max-size=10MB
logging.file.max-history=30

# ===================================================================
# ACTUATOR CONFIGURATION
# ===================================================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true

# ===================================================================
# SPRINGDOC (SWAGGER) CONFIGURATION
# ===================================================================
springdoc.api-docs.path=/v3/api-docs
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.filter=true
springdoc.show-actuator=false

# ===================================================================
# CUSTOM APPLICATION PROPERTIES
# ===================================================================

# Business Rules - Validation
userservice.validation.password.min-length=8
userservice.validation.password.require-uppercase=true
userservice.validation.password.require-lowercase=true
userservice.validation.password.require-numbers=true
userservice.validation.password.require-special-chars=true
userservice.validation.phone.pattern=^6[5-9]\\d{7}$
userservice.validation.phone.country-code=+237
userservice.validation.cni.pattern=\\d{8,12}
userservice.validation.cni.min-length=8
userservice.validation.cni.max-length=12

# Security Settings
userservice.security.max-login-attempts=3
userservice.security.lockout-duration-minutes=15
userservice.security.session-timeout-hours=24
userservice.security.password-reset-token-validity-hours=2

# File Upload Settings
userservice.upload.max-file-size=10MB
userservice.upload.allowed-file-types=jpg,jpeg,png,pdf
userservice.upload.kyc-document-path=${KYC_DOCUMENT_PATH:/uploads/kyc/}

# Business Limits - Transactions
userservice.transaction.deposit.min-amount=100
userservice.transaction.deposit.max-amount=10000000
userservice.transaction.withdrawal.min-amount=100
userservice.transaction.withdrawal.max-amount=5000000
userservice.transaction.transfer.min-amount=100
userservice.transaction.transfer.max-amount=5000000
userservice.transaction.daily-limits.withdrawal=1000000
userservice.transaction.daily-limits.transfer=2000000
userservice.transaction.daily-limits.operations=10000000

# External Services
userservice.services.agence.url=${AGENCE_SERVICE_URL:http://localhost:8080}
userservice.services.agence.timeout=5000
userservice.services.agence.retry-attempts=3
userservice.services.notification.url=${NOTIFICATION_SERVICE_URL:http://localhost:8082}
userservice.services.notification.enabled=${NOTIFICATION_ENABLED:true}
userservice.services.sms.provider=${SMS_PROVIDER:default}
userservice.services.sms.api-key=${SMS_API_KEY:}
userservice.services.sms.sender-name=${SMS_SENDER:ENSF-Wallet}

# ===================================================================
# PROFILE-SPECIFIC CONFIGURATIONS
# ===================================================================

# Development Profile
spring.config.activate.on-profile=dev
logging.level.com.m1_fonda.serviceUser=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.data.mongodb=DEBUG
userservice.security.max-login-attempts=5

# Test Profile  
spring.config.activate.on-profile=test
spring.data.mongodb.database=userservice_test
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
logging.level.com.m1_fonda.serviceUser=DEBUG
userservice.services.notification.enabled=false

# Production Profile
spring.config.activate.on-profile=prod
server.port=8081
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE:}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
spring.data.mongodb.uri=${MONGODB_URI}
spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.username=${RABBITMQ_USERNAME}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
spring.rabbitmq.ssl.enabled=${RABBITMQ_SSL:false}
logging.level.com.m1_fonda.serviceUser=INFO
logging.level.org.springframework.security=WARN
logging.file.name=/var/log/userservice/application.log
management.endpoints.web.exposure.include=health,info,metrics
userservice.security.max-login-attempts=3
userservice.security.lockout-duration-minutes=30
userservice.services.notification.enabled=true